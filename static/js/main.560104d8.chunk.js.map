{"version":3,"sources":["Images/Logo/logoProvisoria.png","Images/Home/handphone.webp","Images/Home/planosexemplo.png","Images/Home/pickshop.png","Images/Home/shop.png","Images/Home/whatsapp-no-ecommerce.jpg","API/AuthenticationService.js","Pages/Login/Login.js","Pages/SignUp/SignUp.js","Pages/Home/Home.js","API/ManagerService.js","Pages/Manager/Manager.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BASE_URL","Login","_ref","onClose","onLoginSuccess","containerRef","useRef","email","setEmail","useState","password","setPassword","loginMessage","setLoginMessage","loginMessageErro","setLoginMessageErro","setLocation","useLocation","React","createElement","className","onClick","e","target","current","ref","type","placeholder","value","onChange","href","async","hashedPassword","CryptoJS","SHA256","toString","enc","Hex","login","console","log","response","fetch","concat","ok","Error","json","SearchUserByLoginAndPassword","error","SignUp","nome","setNome","signupMessage","setsignupMessage","signupMessageErro","setsignupMessageErro","currentUser","setCurrentUser","id","name","image_url","authentication","userToInsert","method","headers","body","JSON","stringify","userData","_response$headers$get","errorMessage","get","includes","message","text","InsertUser","Home","showLoginModal","setShowLoginModal","showSignUpModal","setShowSignUpModal","loginResponse","setLoginResponse","style","marginLeft","marginTop","src","logoImageUrl","alt","color","handImage","backgroundColor","PlansImage","borderRadius","height","marginRight","BuildStoreImage","ExploreAndSelectImage","RedirectToWppImage","background","fontSize","fontWeight","marginBottom","display","GetAllGroupItem","GetAllItem","responseData","store","description","imageUrl","user_id","groupItem","store_id","item","groupItem_id","imageItem","url","item_id","formatValue","String","replace","trim","Manager","setName","setDescription","editTitleModalOpen","setEditTitleModalOpen","groupItems","setGroupItems","items","setItems","modalOpen","setModalOpen","selectedProduct","setSelectedProduct","modalNewGroupOpen","setModalNewGroupOpen","Modal","isOpen","product","setItem","selectedGroupId","setSelectedGroupId","useEffect","handleChange","key","parseInt","toFixed","adjustTextareaHeight","textarea","scrollHeight","newGroupId","map","group","width","alignItems","justifyContent","handleSave","itemToSave","formattedValue","parseFloat","UpdateItem","then","resultAllItem","catch","handleDelete","DeleteItem","ModalAddProductCard","_ref2","defaultItem","valueInputStyle","InsertItem","ModalEditGroup","_ref3","groupName","setGroupName","textAlign","updateGroupData","UpdateGroup","resultAllGroupItem","DeleteGroup","ModalNewGroup","_ref4","InsertGroup","modalEditGroupOpen","setModalEditGroupOpen","selectedGroup","setSelectedGroup","addProductModal","setAddProductModal","CategoryButton","_ref5","openModalEditGroup","AddCategoryButton","_ref6","AddProductCard","ProductCard","_ref7","openModal","EditTitleModal","_ref8","tempTitle","setTempTitle","tempDescription","setTempDescription","flexDirection","updateStore","UpdateStore","openEditTitleModal","category","index","Object","assign","closeModal","closeModalNewGroup","closeModalEditGroup","closeAddProductModal","App","Switch","Route","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.560104d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoProvisoria.c9aa09d1.png\";","module.exports = __webpack_public_path__ + \"static/media/handphone.029760cd.webp\";","module.exports = __webpack_public_path__ + \"static/media/planosexemplo.0c3b75f0.png\";","module.exports = __webpack_public_path__ + \"static/media/pickshop.0215dc75.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.332e95bd.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp-no-ecommerce.cfee4a90.jpg\";","//const BASE_URL = \"http://localhost:55922/api\";\nconst BASE_URL = \"http://localhost:5081/api\";\n//const BASE_URL = \"https://commerceproject-8edb84ea86e0.herokuapp.com/api\";\n\nexport const fetchUserById = async (id) => {\n    const response = await fetch(`${BASE_URL}/Authentication/${id}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\n\nexport const SearchUserByLoginAndPassword = async (login, password) => {\n    console.log(password)\n    const response = await fetch(`${BASE_URL}/Authentication/${login}/${password}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\n\nexport const updateUser = async ( userData) => {\n    const response = await fetch(`${BASE_URL}/Authentication`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\n\nexport const InsertUser = async (userData) => {\n    const response = await fetch(`${BASE_URL}/Authentication`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n        let errorMessage = 'Falha ao inserir usuário.';\n        if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n            const data = await response.json(); // Tenta converter a resposta para JSON\n            errorMessage = data.message || errorMessage;\n        } else {\n            const text = await response.text(); // Obtém a resposta como texto simples\n            errorMessage = text || errorMessage;\n        }\n        throw new Error(errorMessage);\n    }\n\n    return await response.json();\n};\n","import React, { useRef, useState } from 'react';\nimport CryptoJS from 'crypto-js';\nimport './Login.css';\nimport '../../API/AuthenticationService';\nimport {SearchUserByLoginAndPassword} from \"../../API/AuthenticationService\";\nimport { useLocation } from 'wouter';\n\nfunction Login({ onClose, onLoginSuccess }) {\n\n    const containerRef = useRef(null);  // Create a ref for the container\n    const [email, setEmail] = useState(''); // State to hold email value\n    const [password, setPassword] = useState(''); // State to hold password value\n    const [loginMessage, setLoginMessage] = useState(''); // State to hold login message\n    const [loginMessageErro, setLoginMessageErro] = useState(''); // State to hold login message\n    const [, setLocation] = useLocation(); // Wouter hook for navigation\n\n    const handleClickOutside = (e) => {\n        if (e.target === containerRef.current) {\n            onClose();\n        }\n    };\n\n    const handleLogin = async () => {\n        try {\n            const hashedPassword = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n            const response = await SearchUserByLoginAndPassword(email, hashedPassword);\n            if (response) { // If response is not null\n                setLoginMessage('Login foi um sucesso.'); // Set success message\n                setLocation('/manager'); // Navigate to Manager\n\n            } else {\n                setLoginMessageErro('O Login falhou. Por favor cheque seu usuário e senha'); // Set error message\n            }\n        } catch (error) {\n            setLoginMessageErro('Ocorreu um erro, por favor entre mais tarde.'); // Set error message for exceptions\n        }\n    };\n\n    return (\n        <div className=\"login-container\" onClick={handleClickOutside} ref={containerRef}>\n            <div className=\"login-box\">\n                <button onClick={onClose} className=\"login-exit-button\" >X</button>\n                <h2>Entrar</h2>\n                <div className=\"input-container\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"E-mail\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"input-container\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Senha\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"help-text\">\n                    <p>Primeira vez usando MyApp? <a href=\"/register\">Cadastre-se</a></p>\n                    <p><a href=\"/forgot\">Esqueceu sua senha?</a></p>\n                </div>\n                <button onClick={handleLogin}>Entrar</button>\n\n                <div className=\"message-container\">\n                    {loginMessage && <p className=\"login-message\">{loginMessage}</p>}\n                    {loginMessageErro && <p className=\"login-message-erro\">{loginMessageErro}</p>}\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, { useRef, useState } from 'react';\nimport CryptoJS from 'crypto-js';\nimport './SignUp.css';\nimport '../../API/AuthenticationService';\nimport {InsertUser, SearchUserByLoginAndPassword} from \"../../API/AuthenticationService\";\n\nfunction SignUp({ onClose }) {\n\n    const containerRef = useRef(null);\n    const [email, setEmail] = useState('');\n    const [nome, setNome] = useState('');\n    const [password, setPassword] = useState('');\n    const [signupMessage, setsignupMessage] = useState('');\n    const [signupMessageErro, setsignupMessageErro] = useState('');\n\n    const [currentUser, setCurrentUser] = useState({\n        id: 0,\n        email: \"\",\n        name: \"\",\n        password: \"null\",\n        image_url: \"\",\n        authentication: false\n    });\n\n\n    const handleClickOutside = (e) => {\n        if (e.target === containerRef.current) {\n            onClose();\n        }\n    };\n\n    const handleSignUp = async () => {\n        // Verificar se todos os campos estão preenchidos e não são null\n        if (!email || !nome || !password) {\n            setsignupMessageErro('Por favor, preencha todos os campos.');\n            return; // Encerrar a execução se algum campo estiver vazio\n        }\n\n        try {\n            const hashedPassword = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n\n            // Configurar os valores do usuário atual antes de tentar o cadastro\n            const userToInsert = {\n                ...currentUser, // Mantém as outras propriedades do currentUser inalteradas\n                email: email,\n                name: nome,\n                password: hashedPassword,\n            };\n\n            // Tentar inserir o usuário e aguardar a resposta\n            const response = await InsertUser(userToInsert);\n\n            // Verificar a resposta da requisição\n            if (response) { // Se a resposta não for nula\n                setsignupMessage('Cadastro realizado com sucesso.');\n                setsignupMessageErro(''); // Limpar a mensagem de erro, se houver\n            } else {\n                setsignupMessageErro('O cadastro falhou. Por favor verifique suas informações.');\n            }\n        } catch (error) {\n            // Capturar a mensagem de erro específica e definir para o estado 'signupMessageErro'\n            setsignupMessageErro(error.message || 'Ocorreu um erro, por favor tente mais tarde.');\n        }\n    };\n\n\n    return (\n        <div className=\"signup-container\" onClick={handleClickOutside} ref={containerRef}>\n            <div className=\"signup-box\">\n                <button onClick={onClose} className=\"signup-exit-button\" >X</button>\n                <h2>Cadastrar-se</h2>\n                <div className=\"input-container\">\n                    <input\n                        type=\"Nome\"\n                        placeholder=\"Nome *\"\n                        value={nome}\n                        onChange={e => setNome(e.target.value)}\n                    />\n                </div>\n                <div className=\"input-container\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"E-mail *\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"input-container\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Senha *\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"help-text\">\n                    <p>Já tenho uma conta no MyApp! <a href=\"/register\">Entrar</a></p>\n\n                </div>\n                <button onClick={handleSignUp}>Cotinuar</button>\n\n                <div className=\"message-container\">\n                    {signupMessage && <p className=\"signup-message\">{signupMessage}</p>}\n                </div>\n                <div className=\"message-container\">\n                    {signupMessageErro && <p className=\"signup-message-erro\">{signupMessageErro}</p>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport './Home.css';\nimport logoImageUrl from '../../Images/Logo/logoProvisoria.png';\nimport handImage from '../../Images/Home/handphone.webp'; // adjust the path according to your project structure\nimport PlansImage from '../../Images/Home/planosexemplo.png'; // adjust the path according to your project structure\nimport BuildStoreImage from '../../Images/Home/pickshop.png'; // adjust the path according to your project structure\nimport ExploreAndSelectImage from '../../Images/Home/shop.png'; // adjust the path according to your project structure\nimport RedirectToWppImage from '../../Images/Home/whatsapp-no-ecommerce.jpg'; // adjust the path according to your project structure\nimport Login from './../Login/Login'; // adjust path if needed\nimport SignUp from './../SignUp/SignUp'; // adjust path if needed\n\n\nfunction Home() {\n\n    const [showLoginModal, setShowLoginModal] = useState(false);\n    const [showSignUpModal, setShowSignUpModal] = useState(false);\n    const [loginResponse, setLoginResponse] = useState(null);\n    const handleLoginSuccess = (response) => {\n        setLoginResponse(response);\n        setShowLoginModal(false);\n        // You can also navigate to Manager or change UI based on response\n    };\n\n    return (\n        <div className=\"app-container\">\n            <header className=\"header\">\n\n                <div style={{marginLeft: '10px', marginTop: '10px'}}>\n                    <img src={logoImageUrl} alt=\"Logo\" className=\"small-image\"/>\n                </div>\n                <nav>\n                    <div className=\"headerText\" href=\"#\">Planos</div>\n                </nav>\n                <nav>\n                    <div className=\"headerText\" href=\"#\">Como funciona</div>\n                </nav>\n\n                <nav>\n                    <div className=\"headerTextInscrevaSe\" onClick={() => setShowSignUpModal(true)} >Se inscrever</div>\n                </nav>\n                <nav>\n                    <button onClick={() => setShowLoginModal(true)}>Entrar</button>\n                </nav>\n\n\n            </header>\n\n\n            <section className=\"first-card\">\n\n                <div className=\"firstCard-text-section\">\n                    <h2 style={{color: '#129666'}}>Crie seu catálogo virtual</h2>\n                    <p style={{color: '#889F7C'}}>e conecte-se diretamente com seus clientes pelo WhatsApp!</p>\n                    <button>Comece Agora</button>\n                </div>\n\n                <div className=\"image-container\">\n                    <img src={handImage} className=\"contained-image\"/>\n                </div>\n            </section>\n\n            <div className=\"second-card\">\n                <div className=\"secondCard-text-title\">Fácil e rápido</div>\n                <div className=\"secondCard-text-subtitle\">Comece agora seguindo os seguintes passos</div>\n                <div className=\"card-row\">\n                    <div style={{backgroundColor: '#DCD9F8'}} className=\"secondCard-image-container\">\n                        <img src={PlansImage} className=\"secondCard-contained-image\"/>\n                        <div className=\"secondCard-text-section\">\n                            <div className='secondCard-text-section-title' style={{color: '#333333'}}>Escolha o seu\n                                plano\n                            </div>\n                            <div className='secondCard-text-section-description'>Barato e acessível</div>\n\n                        </div>\n\n                    </div>\n\n                    <div style={{backgroundColor: '#FFE6DF'}} className=\"secondCard-image-container\">\n                        <img style={{borderRadius: '30px', height: '80%', marginRight: '20px'}} src={BuildStoreImage}\n                             className=\"secondCard-contained-image\"/>\n                        <div className=\"secondCard-text-section\">\n                            <div className='secondCard-text-section-title' style={{color: '#333333'}}>Crie sua loja\n                                virtual\n                            </div>\n                            <div className='secondCard-text-section-description'>Adicione seus produtos\n                                ou serviços\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"card-row\">\n                    <div style={{backgroundColor: '#FCE2EB'}} className=\"secondCard-image-container\">\n                        <img src={ExploreAndSelectImage} className=\"secondCard-contained-image\"/>\n                        <div className=\"secondCard-text-section\">\n                            <div className='secondCard-text-section-title' style={{color: '#333333'}}>Explore e\n                                Selecione\n                            </div>\n                            <div className='secondCard-text-section-description'>O cliente será direcionado\n                                para o seu whatsapp com\n                                a lista de pedidos\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div style={{backgroundColor: '#DCF4F4'}} className=\"secondCard-image-container\">\n                        <img src={RedirectToWppImage} className=\"secondCard-contained-imageFourth\"/>\n                        <div style={{marginLeft: '5px'}} className=\"secondCard-text-section\">\n                            <div className='secondCard-text-section-title' style={{color: '#333333'}}>Feche a venda\n                                pelo whatsapp\n                            </div>\n                            <div className='secondCard-text-section-description'>O cliente será direcionado\n                                para o seu whatsapp com\n                                a lista de pedidos\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n\n            <div className='third-card-container'>\n                <div className='third-card-contained-square'>\n                    <h2 style={{color: '#129666'}}>Planos</h2>\n                </div>\n                <div className='cards-container'>\n                    <div className=\"card\" style={{background: 'linear-gradient(to bottom, #00A39C, #006A42)'}}>\n                        <div className=\"card-header\">Mensal</div>\n                        <div className=\"card-content\">\n                            <p>ASSINE MENSALMENTE</p>\n                            <p>E CRIE SEU CATÁLOGO VIRTUAL</p>\n                        </div>\n                        <div className=\"card-price\">\n                            <span>R$<sup>14,99</sup></span>\n                            <span className=\"price-period\">POR MÊS</span>\n                        </div>\n                        <button className=\"buy-button\">ASSINAR</button>\n                    </div>\n\n                    <div className=\"card\" style={{background: 'linear-gradient(to bottom, #8461A3, #006A42)'}}>\n                        <div className=\"card-header\">Trimestral</div>\n                        <div className=\"card-content\">\n                            <p>ASSINE O TRIMESTRAL</p>\n                            <p>E CRIE SEU CATÁLOGO VIRTUAL</p>\n                        </div>\n                        <div className=\"card-price\">\n                            <span>R$<sup>39,99</sup></span>\n                            <span className=\"price-period\">POR 3 MESES</span>\n                        </div>\n                        <button className=\"buy-button\">ASSINAR</button>\n                    </div>\n\n                    <div className=\"card\" style={{background: 'linear-gradient(to bottom, #FF7694, #006A42)'}}>\n                        <div className=\"card-header\">Anual</div>\n                        <div className=\"card-content\">\n                            <p>ASSINE ANUALMENTE</p>\n                            <p>E CRIE SEU CATÁLOGO VIRTUAL</p>\n                        </div>\n                        <div className=\"card-price\">\n                            <span>R$<sup>149,99</sup></span>\n                            <span className=\"price-period\">POR 1 ANO</span>\n                        </div>\n                        <button className=\"buy-button\">ASSINAR</button>\n                    </div>\n                </div>\n\n\n            </div>\n            <div style={{backgroundColor: '#006A42', marginTop: '-1px'}}>\n                <div className='fourth-card-container'>\n                    <div style={{color: 'white', fontSize: '250%', fontWeight: 'bolder', marginBottom: '10px'}}>Junte-se\n                        a nós\n                    </div>\n                    <div style={{color: 'white', fontSize: '120%', fontWeight: 'bold', marginBottom: '10px'}}>Exponha\n                        seus produtos e\n                    </div>\n                    <div style={{color: 'white', fontSize: '100%'}}>serviços do seu catálogo virtual</div>\n                </div>\n\n            </div>\n\n\n            <footer>\n                <p style={{marginLeft: '10px'}}>MY APP</p>\n                <div style={{display: 'flex'}}>\n                    <div style={{fontSize: '60%', marginLeft: '10px'}} href=\"#\">termos de serviço</div>\n                    <div style={{fontSize: '60%', marginLeft: '10px'}} href=\"#\">política de privacidade</div>\n                    <div style={{fontSize: '60%', marginLeft: '10px'}} href=\"#\">Contate-nos</div>\n                    <div style={{fontSize: '60%', marginLeft: '10px', marginRight: '10px'}}>MyApp 2023. All rights\n                        reserved\n                    </div>\n                </div>\n\n            </footer>\n\n            {showLoginModal && <Login onClose={() => setShowLoginModal(false)} />}\n            {showSignUpModal && <SignUp onClose={() => setShowSignUpModal(false)} />}\n\n        </div>\n    );\n}\n\nexport default Home;\n","//const BASE_URL = \"http://localhost:55922/api\";\nconst BASE_URL = \"http://localhost:5081/api\";\n//const BASE_URL = \"https://commerceproject-8edb84ea86e0.herokuapp.com/api\";\n\nexport const GetStoreById = async (id) => {\n    const response = await fetch(`${BASE_URL}/Store/${id}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\nexport const GetAllStore = async (id) => {\n    const response = await fetch(`${BASE_URL}/Store/manager/${id}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\nexport const DeleteStore = async (id) => {\n    const response = await fetch(`${BASE_URL}/Store/${id}`, {\n        method: 'DELETE'\n    });\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\nexport const DeleteGroup = async (id) => {\n    const response = await fetch(`${BASE_URL}/GroupItem/${id}`, {\n        method: 'DELETE'\n    });\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\n\nexport const DeleteItem = async (id) => {\n    const response = await fetch(`${BASE_URL}/Item/${id}`, {\n        method: 'DELETE'\n    });\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\n\nexport const GetAllGroupItem = async (id) => {\n    const response = await fetch(`${BASE_URL}/GroupItem/ByStoreID/${id}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\nexport const GetAllItem = async (id) => {\n    console.log('getallitem', id);\n    const response = await fetch(`${BASE_URL}/Item/GetItemByStoreId/${id}`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch user');\n    }\n    return await response.json();\n}\nexport const UpdateStore = async (userData) => {\n    const response = await fetch(`${BASE_URL}/Store`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\n\nexport const InsertGroup = async (userData) => {\n    const response = await fetch(`${BASE_URL}/GroupItem`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\nexport const InsertItem = async (userData) => {\n    console.log('entrou no insertitem');\n    console.log(userData);\n    const response = await fetch(`${BASE_URL}/Item`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\n\nexport const UpdateItem = async (userData) => {\n    const response = await fetch(`${BASE_URL}/Item`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\n\nexport const UpdateGroup = async (userData) => {\n    const response = await fetch(`${BASE_URL}/GroupItem`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user');\n    }\n    return await response.json();\n}\n\nexport const InsertStore = async (userData) => {\n    const response = await fetch(`${BASE_URL}/Store`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n        let errorMessage = 'Falha ao inserir usuário.';\n        if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n            const data = await response.json(); // Tenta converter a resposta para JSON\n            errorMessage = data.message || errorMessage;\n        } else {\n            const text = await response.text(); // Obtém a resposta como texto simples\n            errorMessage = text || errorMessage;\n        }\n        throw new Error(errorMessage);\n    }\n\n    return await response.json();\n};\n","import React,  { useState, useEffect } from 'react';\nimport './Manager.css';\nimport './../../API/ManagerService'\nimport {\n    DeleteGroup, DeleteItem,\n    GetAllGroupId,\n    GetAllGroupItem, GetAllItem,\n    InsertGroup, InsertItem,\n    UpdateGroup, UpdateItem,\n    UpdateStore\n} from \"../../API/ManagerService\";\n\n// import { useLocation } from 'wouter'; // Descomente se precisar utilizar a localização\n\n\nconst responseData = {\n    store:{\n        id: 1,\n        name: 'Nome da loja',\n        description: 'Texto que descreve o catálogo, os produtos.',\n        imageUrl:'https://i.pinimg.com/originals/6a/97/3a/6a973acc6f9e9fb337ba5509bb77e58e.jpg',\n        user_id: 1\n    },\n    groupItem: [\n        {\n            id: '1',\n            name: 'Acessórios camionete',\n            store_id: '1'\n        },\n        { id: '2',\n            name: 'Acessórios moto',\n            store_id: '1'\n        },\n        { id: '3',\n            name: 'Acessórios moto',\n            store_id: '1'\n        },\n        { id: '4',\n            name: 'Acessórios moto',\n            store_id: '1'\n        },\n        { id: '5',\n            name: 'Capas de banco',\n            store_id: '1'\n        },\n        { id: '6',\n            name: 'Acessórios carro',\n            store_id: '1'\n        }\n\n    ],\n    item: [\n        {\n            id: 2,\n            name: 'Cama para pet',\n            description: 'Cama aveludada para seu PET',\n            value: 'R$ 120,00',\n            store_id: '1',\n            groupItem_id: '1',\n            imageItem: [\n                {\n                    id: '1',\n                    url: 'https://encrypted-tbn1.gstatic.com/shopping?q=tbn:ANd9GcS-NAirmCqGHYmIE-mDNeeIZHnr6VdyQ6mQGKQR-ufy9vtgehoTeTcvbRim1ai-IPRn-m2IF4NugKuM6esC4g1FaTv9vCGDWv405rqCEJo&usqp=CAE',\n                    item_id: '1'\n                }\n            ]\n\n        },\n        {\n            id: 1,\n            name: 'ITag - Rastreador de animais',\n            description: 'Pingente para rastreamento do animal a partir de GPS',\n            value: 'R$ 200,00',\n            store_id: '1',\n            groupItem_id: '2',\n            imageItem: [\n                {\n                    id: '1',\n                    url: 'https://encrypted-tbn3.gstatic.com/shopping?q=tbn:ANd9GcQxv-x__rfJ1qpIM1F2CP5H1s7J3xHTDLZbZS4UN5HAPACf9NcEgXj_xe--e-ft0HkxvUh3T1I4-Xk6UkyheAHcifjfnKcki3XHXI3ttbyCyTXzG7x61lfp&usqp=CAE',\n                    item_id: '1'\n                }\n            ]\n        },\n\n        {\n            id: 3,\n            name: 'Peruca para pet',\n            description: 'Peruca engraçada para seu PET',\n            value: 'R$ 120,00',\n            store_id: '1',\n            groupItem_id: '3',\n            imageItem: [\n                {\n                    id: '1',\n                    url: 'https://m.media-amazon.com/images/W/MEDIAX_792452-T2/images/I/51tYXyD5NHL.__AC_SX300_SY300_QL70_FMwebp_.jpg',\n                    item_id: '1'\n                }\n            ]\n        }\n    ]\n};\n// Modal.js\n\nfunction formatValue(value) {\n    // Converte o valor para string para garantir que o método replace possa ser chamado\n    if (!value) return '';\n    const stringValue = String(value); // Converte o valor para string\n    return stringValue.replace('R$', '').trim();\n}\n\nfunction Manager() {\n\n    const [name, setName] = useState(responseData.store.name);\n    const [description, setDescription] = useState(responseData.store.description);\n\n    const [editTitleModalOpen, setEditTitleModalOpen] = useState(false);\n    // Inicialize tempTitle e tempDescription como strings vazias ou outro valor inicial.\n\n\n\n\n    const [groupItems, setGroupItems] = useState(responseData.groupItem);\n    const [items, setItems] = useState(responseData.item);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    /* MODAL NEW GROUP SECTION */\n\n    const [modalNewGroupOpen, setModalNewGroupOpen] = useState(false);\n\n\n    function Modal({ isOpen, onClose, product, groupItems }) {\n        const [item, setItem] = useState(product || {});\n        const [selectedGroupId, setSelectedGroupId] = useState(product?.groupItem_id || '');\n\n        useEffect(() => {\n            if (product) {\n                setItem({\n                    ...product,\n                    value: formatValue(product.value),\n                });\n                setSelectedGroupId(product.groupItem_id || '');\n                console.log(product.groupItem_id || 'tem nada'); // Aqui você pode adicionar lógica para salvar o grupo\n\n            }\n        }, [product]);\n\n        const handleDelete = () => {\n\n            DeleteItem(item.id).then(() => {\n                console.log(\"Item deletado com sucesso.\");\n\n                // Chamada assíncrona para buscar todos os grupos, se necessário\n                GetAllItem(responseData.store.id).then(resultAllItem => {\n                    console.log('result all item',resultAllItem);\n                    setItems(resultAllItem); // Ajuste conforme necessário\n                }).catch(error => console.error(\"Erro ao buscar items:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir item:\", error));\n            onClose(); // Fecha o modal após a inserção\n        };\n        const handleSave = () => {\n\n            let itemToSave = { ...item };\n\n            // Checa se o valor é uma string e faz a conversão\n            if (typeof itemToSave.value === 'string') {\n                // Remove pontos de milhar e substitui vírgula por ponto para conversão\n                let formattedValue = itemToSave.value.replace(/\\./g, '').replace(',', '.');\n                itemToSave.value = parseFloat(formattedValue);\n            }\n            console.log('handleSave Modal', itemToSave);\n\n            UpdateItem(itemToSave).then(() => {\n                console.log(\"Item inserido com sucesso.\");\n\n                // Chamada assíncrona para buscar todos os grupos, se necessário\n                GetAllItem(responseData.store.id).then(resultAllItem => {\n                    console.log('result all item',resultAllItem);\n                    setItems(resultAllItem); // Ajuste conforme necessário\n                }).catch(error => console.error(\"Erro ao buscar items:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir item:\", error));\n            onClose(); // Fecha o modal após a inserção\n        };\n\n        const handleChangeGroup = (e) => {\n            // Atualiza o item com o novo groupItem_id selecionado\n            const newGroupId = e.target.value;\n            setSelectedGroupId(newGroupId);\n            setItem({ ...item, groupItem_id: newGroupId });\n        };\n        const handleChange = (e, key) => {\n            let value = e.target.value;\n            if (key === 'value') {\n                value = value.replace(/\\D/g, ''); // Remove tudo que não for dígito\n\n                if (value) {\n                    value = (parseInt(value) / 100).toFixed(2); // Formata para duas casas decimais\n                    value = value.replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.'); // Substitui ponto por vírgula e adiciona ponto para milhar\n                }\n            }\n\n            setItem({ ...item, [key]: value });\n            if (key === 'description') {\n                adjustTextareaHeight(e.target);\n            }\n        };\n\n        const adjustTextareaHeight = (textarea) => {\n            textarea.style.height = 'inherit';\n            textarea.style.height = `${textarea.scrollHeight}px`;\n        };\n\n\n\n        if (!isOpen) return null;\n\n        return (\n            <div className=\"modal-overlay\">\n                <div className=\"modal-content\">\n                    <div className=\"close-button-container\">\n                        <button onClick={onClose} className=\"close-button\">&times;</button>\n                    </div>\n                    <input\n                        value={item.name || ''}\n                        placeholder=\"Titulo do item\"\n                        onChange={(e) => handleChange(e, 'name')}\n                        className=\"input-h1-modal\"\n                    />\n                    <div style={{marginBottom: '20px'}}>\n                        <select\n                            value={selectedGroupId}\n                            onChange={handleChangeGroup}\n                            className=\"input-select-modal\"\n                        >\n                            <option value=\"\">{!item.groupItem_id ? 'Selecione um grupo' : 'Mudar grupo'}</option>\n                            {groupItems.map((group) => (\n                                <option key={group.id} value={group.id}>\n                                    {group.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <img src={item.imageItem && item.imageItem[0].url} alt={item.name} style={{width: \"100%\"}}/>\n                    <textarea\n                        placeholder=\"Coloque a descrição do seu item.\"\n                        value={item.description || ''}\n                        onChange={(e) => handleChange(e, 'description')}\n                        className=\"input-p-modal-description\"\n                        style={{height: 'auto'}}\n                    />\n\n                    <div style={{display: 'flex', alignItems: 'center'}}>\n\n                        <input\n                            placeholder=\"Coloque o valor. Ex: R$ 100,00\"\n                            value={item.value ? `R$ ${item.value}` : ''}\n                            onChange={(e) => handleChange(e, 'value')}\n                            className=\"input-p-modal-value\"\n                            type=\"text\"\n                        />\n                    </div>\n\n                    <div style={{display: 'flex', marginBottom: '10px', justifyContent: 'space-evenly'}}>\n                        <button style={{width: '100%', backgroundColor: '#4CB5F9'}} onClick={handleSave}>Salvar</button>\n                        <div style={{width: '50%'}}/>\n                        <button style={{width: '100%', backgroundColor: 'red'}} onClick={handleDelete}>Excluir</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    function ModalAddProductCard({ isOpen, onClose, groupItems }) { // Adicione groupItems aqui\n\n        const defaultItem = {\n            id: 0,\n            name: '',\n            store_id: responseData.store.id,\n            description: '',\n            value: '',\n            groupItem_id: 0,\n            imageItem: [\n                {\n                    id: 0,\n                    url: 'https://static.thenounproject.com/png/396915-200.png',\n                    item_id: 0\n                }\n            ]\n        };\n        const [item, setItem] = useState(defaultItem);\n        const [selectedGroupId, setSelectedGroupId] = useState(''); // Isso garante que o estado seja manipulado corretamente\n        useEffect(() => {\n            setItem(defaultItem);\n            setSelectedGroupId('');\n        }, [isOpen]);\n        const handleChangeGroup = (e) => {\n            const newGroupId = e.target.value;\n            setSelectedGroupId(newGroupId);\n            setItem({ ...item, groupItem_id: newGroupId });\n        };\n\n\n        const handleChange = (e, key) => {\n            let value = e.target.value;\n            if (key === 'value') {\n                value = value.replace(/\\D/g, '');\n\n                if (value) {\n                    value = (parseInt(value) / 100).toFixed(2);\n\n                    value = value.replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n                }\n            }\n\n            setItem({ ...item, [key]: value });\n\n            if (key === 'description') {\n                adjustTextareaHeight(e.target);\n            }\n        };\n        const adjustTextareaHeight = (textarea) => {\n            textarea.style.height = 'inherit'; // Reseta a altura para calcular corretamente\n            textarea.style.height = `${textarea.scrollHeight}px`; // Define a altura para acomodar todo o conteúdo\n        };\n\n        const handleSave = () => {\n\n            let itemToSave = { ...item };\n\n            // Checa se o valor é uma string e faz a conversão\n            if (typeof itemToSave.value === 'string') {\n                // Remove pontos de milhar e substitui vírgula por ponto para conversão\n                let formattedValue = itemToSave.value.replace(/\\./g, '').replace(',', '.');\n                itemToSave.value = parseFloat(formattedValue);\n            }\n            console.log(item);\n\n            InsertItem(itemToSave).then(() => {\n                console.log(\"Item inserido com sucesso.\");\n\n                // Chamada assíncrona para buscar todos os grupos, se necessário\n                GetAllItem(responseData.store.id).then(resultAllItem => {\n                    console.log('result all item',resultAllItem);\n                    setItems(resultAllItem); // Ajuste conforme necessário\n                }).catch(error => console.error(\"Erro ao buscar items:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir item:\", error));\n            onClose(); // Fecha o modal após a inserção\n        };\n\n        if (!isOpen) return null;\n\n        const valueInputStyle = {\n            marginLeft: item.value ? '30px' : '0', // Ajuste '20px' conforme necessário\n            // Outros estilos para o input podem ser adicionados aqui\n        };\n        return (\n            <div className=\"modal-overlay\">\n                <div className=\"modal-content\">\n                    <div className=\"close-button-container\">\n                        <button onClick={onClose} className=\"close-button\">\n                            &times; {/* Símbolo de multiplicação usado como ícone de fechar */}\n                        </button>\n                    </div>\n\n                    <input\n                        value={item.name}\n                        placeholder={'Titulo do item'}\n                        onChange={(e) => handleChange(e, 'name')}\n                        className=\"input-h1-modal\"\n                    />\n                    <div style={{marginBottom: '20px'}}>\n                        <select\n                            value={selectedGroupId}\n                            onChange={(e) => {\n                                const newGroupId = e.target.value;\n                                setSelectedGroupId(newGroupId);\n                                setItem({...item, groupItem_id: newGroupId});\n                            }}\n                            className=\"input-select-modal\"\n                        >\n                            <option value=\"\">Selecione um grupo</option>\n                            {groupItems.map((group) => (\n                                <option key={group.id} value={group.id}>\n                                    {group.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <img src={item.imageItem[0].url} alt={item.name} style={{width: \"100%\"}}/>\n                    <textarea\n                        placeholder={'Coloque a descrição do seu item.'}\n                        value={item.description}\n                        onChange={(e) => handleChange(e, 'description')}\n                        className=\"input-p-modal-description\"\n                        style={{height: 'auto'}} // Inicializa com altura auto\n                    />\n\n                    <div style={{alignItems: 'center'}}>\n                        {item.value && (\n                            <div style={{marginLeft: '10px', display: 'flex', alignItems: 'center', marginBottom: '-27px'}}>\n                                R$:\n                            </div>\n                        )}\n\n\n                        <div style={{alignItems: 'center'}}>\n                            <input\n                                placeholder={'Coloque o valor. Ex: R$ 100,00'}\n                                value={item.value}\n                                onChange={(e) => handleChange(e, 'value')}\n                                className=\"input-p-modal-value\"\n                                type=\"text\"\n                                style={valueInputStyle} // Aplicar estilo condicional\n                            />\n                        </div>\n                    </div>\n\n                    <div style={{display: 'flex', marginBottom: '10px', justifyContent: 'space-evenly'}}>\n                        <button style={{width: '100%', backgroundColor: '#4CB5F9'}} onClick={handleSave}>Salvar</button>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n\n    function ModalEditGroup({isOpen, onClose, group}) {\n        const [groupName, setGroupName] = useState('');\n\n        // Atualiza o estado groupName sempre que a propriedade group mudar\n        useEffect(() => {\n            if (group) {\n                setGroupName(group.name);\n            } else {\n                setGroupName(''); // Reseta o groupName se group for null\n            }\n        }, [group]);\n\n        if (!isOpen) return null;\n\n        const handleInputChange = (e) => {\n            setGroupName(e.target.value);\n        };\n\n        const handleSave = () => {\n            console.log(groupName);\n\n\n            let updateGroupData = {\n                id: group.id,\n                name: groupName,\n                store_id: group.store_id\n            };\n            console.log(updateGroupData);\n\n            UpdateGroup(updateGroupData).then(() => {\n                console.log(\"Grupo inserido com sucesso.\");\n\n                // Chamada assíncrona para buscar todos os grupos\n                GetAllGroupItem(responseData.store.id).then(resultAllGroupItem => {\n                    console.log(resultAllGroupItem);\n\n\n                    setGroupItems(resultAllGroupItem); // Esta linha pode precisar ser ajustada\n                }).catch(error => console.error(\"Erro ao buscar grupos:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir Grupo:\", error));\n            onClose();\n        };\n\n        const handleDelete = () => {\n\n            DeleteGroup(group.id).then(() => {\n                console.log(\"Grupo deletado com sucesso.\");\n\n                GetAllGroupItem(responseData.store.id).then(resultAllGroupItem => {\n\n                    setGroupItems(resultAllGroupItem);\n                }).catch(error => console.error(\"Erro ao buscar grupos:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir Grupo:\", error));\n            onClose();\n        };\n\n        return (\n            <div className=\"modal-overlay\">\n                <div className=\"modal-content\">\n\n                    <div style={{display: 'flex', marginBottom: '25px', justifyContent: 'start'}}>\n                        <div className=\"close-button-container\">\n                            <button onClick={onClose} className=\"close-button\">\n                                &times; {/* Símbolo de multiplicação usado como ícone de fechar */}\n                            </button>\n                        </div>\n\n                        <div style={{    textAlign: 'center',\n                            marginLeft: '80px',\n                            marginTop: '10px',\n                            fontWeight: 'bold'}}>Editar grupo\n                        </div>\n\n                    </div>\n                    <input\n                        placeholder={'Nome do grupo'}\n                        value={groupName}\n                        onChange={handleInputChange}\n                        className=\"input-modal\"\n                    />\n                    <div style={{display: 'flex', marginBottom: '25px', justifyContent: 'space-evenly'}}>\n                        <button style={{width: '80%', backgroundColor: '#4CB5F9'}} onClick={handleSave}>Salvar</button>\n                        <div style={{width: '80%'}}/>\n\n                        <button style={{width: '80%', backgroundColor: 'red'}} onClick={handleDelete}>Excluir</button>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n\n    function ModalNewGroup({isOpen, onClose}) {\n        const [groupName, setGroupName] = useState(''); // Adiciona estado para armazenar o nome do grupo\n\n        if (!isOpen) return null;\n\n        const handleInputChange = (e) => {\n            setGroupName(e.target.value);\n        };\n\n        const handleSave = () => {\n            console.log(groupName);\n            let insertGroupData = {\n                id: '0',\n                name: groupName,\n                store_id: responseData.store.id\n            };\n            InsertGroup(insertGroupData).then(() => {\n                console.log(\"Grupo inserido com sucesso.\");\n\n                // Chamada assíncrona para buscar todos os grupos\n                GetAllGroupItem(responseData.store.id).then(resultAllGroupItem => {\n                    // Supondo que resultAllGroupItem retorne os dados esperados diretamente\n                    console.log(resultAllGroupItem);\n\n                    // Atualiza a lista de groupItems com o resultado\n                    // Aqui você precisará garantir que o estado global seja atualizado,\n                    // possivelmente passando uma função de atualização para este componente\n                    // ou utilizando uma abordagem de gerenciamento de estado global (como Context ou Redux)\n                    setGroupItems(resultAllGroupItem); // Esta linha pode precisar ser ajustada\n                }).catch(error => console.error(\"Erro ao buscar grupos:\", error));\n\n            }).catch(error => console.error(\"Erro ao inserir Grupo:\", error));\n            onClose(); // Fechar modal após a inserção e atualização serem concluídas\n        };\n\n        return (\n            <div className=\"modal-overlay\">\n                <div className=\"modal-content\">\n\n                    <div style={{display: 'flex', marginBottom: '25px', justifyContent: 'start'}}>\n                        <div className=\"close-button-container\">\n                            <button onClick={onClose} className=\"close-button\">\n                                &times; {/* Símbolo de multiplicação usado como ícone de fechar */}\n                            </button>\n                        </div>\n                        <div style={{\n                            textAlign: 'center',\n                            marginLeft: '50px',\n                            marginTop: '10px',\n                            fontWeight: 'bold'\n                        }}>Adicionar novo grupo\n                        </div>\n                    </div>\n\n\n                    <input\n                        placeholder={'Nome do grupo'}\n                        value={groupName}\n                        onChange={handleInputChange}\n                        className=\"input-modal\"\n                    />\n                    <button\n                        style={{ backgroundColor: '#4CB5F9'}}\n                        onClick={handleSave} // Alterado para usar handleSave\n                    >\n                        Salvar\n                    </button>\n                    <div style={{display: 'flex', marginBottom: '25px', justifyContent: 'space-evenly'}}>\n\n                        <div style={{width: '80%'}}/>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    const openModalNewGroup = () => {\n        setModalNewGroupOpen(true);\n    };\n    const closeModalNewGroup = () => {\n        setModalNewGroupOpen(false);\n    };\n\n    /* FIM: NEW GROUP SECTION */\n\n    /* MODAL EDIT GROUP SECTION */\n\n    const [modalEditGroupOpen, setModalEditGroupOpen] = useState(false);\n    const [selectedGroup, setSelectedGroup] = useState(null);\n\n    const openModalEditGroup = (id, name, store_id) => {\n        const group = {\n            id,\n            name,\n            store_id,\n        };\n        setSelectedGroup(group);\n        setModalEditGroupOpen(true);\n    };\n    const closeModalEditGroup = () => {\n        setModalEditGroupOpen(false);\n    };\n\n    /* FIM: NEW GROUP SECTION */\n\n\n    /* MODAL ITEM SECTION */\n\n\n    const openModal = (id, name, description, value, imageItem, store_id, groupItem_id) => {\n        const product = {\n            id,\n            name,         // Equivalente a name: name,\n            description,  // Equivalente a description: description,\n            value,        // Equivalente a value: value,\n            imageItem,\n            store_id,\n            groupItem_id\n        };\n        setSelectedProduct(product);\n        setModalOpen(true);\n    };\n\n\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [addProductModal, setAddProductModal] = useState(false);\n\n    const openAddProductModal = () => {\n\n        setAddProductModal(true);\n    };\n\n    const closeAddProductModal = () => {\n        setAddProductModal(false);\n    };\n\n    /* FIM: MODAL ITEM SECTION */\n\n\n\n\n    const CategoryButton = ({id, name, store_id}) => (\n        <button className=\"category-button\" onClick={() => openModalEditGroup(id, name, store_id)}>{name}</button>\n    );\n    const AddCategoryButton = ({ text }) => (\n        <div className=\"add-category-button-container\" onClick={() => openModalNewGroup()}>\n            <button className=\"add-category-button\">{text}</button>\n        </div>\n    );\n\n\n    const AddProductCard = () => (\n        <div style = {{textAlign:'center', }} className=\"add-product-card\" onClick={() => openAddProductModal()}>\n            <div className=\"add-product-card-text-title\">Adicionar</div>\n            <div className=\"add-product-card-text-subtitle\">item</div>\n        </div>\n    );\n    const ProductCard = ({id, name, description, value, imageItem, store_id, groupItem_id}) => (\n        <div className=\"product-card\" onClick={() => openModal(id, name, description, value, imageItem, store_id, groupItem_id)}>\n            <img src={imageItem[0].url} alt={name} className=\"product-image\" />\n            <h3>{name}</h3>\n            <p>{description}</p>\n            <p className=\"value\">{value}</p>\n        </div>\n    );\n    const maxLines = 6;\n\n    const handleDescriptionChange = (e) => {\n        const inputValue = e.target.value;\n        const lines = inputValue.split('\\n');\n\n        // Verifica se o número de quebras de linha é menor que o máximo permitido\n        if (lines.length <= maxLines) {\n            setDescription(inputValue);\n        } else {\n            // Se o número máximo de linhas for excedido, mantenha apenas as primeiras seis linhas\n            setDescription(lines.slice(0, maxLines).join('\\n'));\n        }\n    };\n\n\n\n    function EditTitleModal({ isOpen, onClose, name, description, setName, setDescription, setEditTitleModalOpen }) {\n        const [tempTitle, setTempTitle] = useState(name);\n        const [tempDescription, setTempDescription] = useState(description);\n\n        // Atualiza os estados locais quando os valores externos mudam\n        useEffect(() => {\n            setTempTitle(name);\n            setTempDescription(description);\n        }, [name, description]);\n\n        const updateStore = () => {\n            if (tempTitle !== name || tempDescription !== description) {\n                let updatedStore = {\n                    id: responseData.store.id,\n                    name: tempTitle,\n                    description: tempDescription,\n                    imageUrl: responseData.store.imageUrl,\n                    user_id: responseData.store.user_id\n                };\n\n                UpdateStore(updatedStore)\n                    .then(() => {\n                        console.log(\"Loja atualizada com sucesso.\");\n                        setName(tempTitle);\n                        setDescription(tempDescription);\n                        responseData.store.name = tempTitle;\n                        responseData.store.description = tempDescription;\n                    }).catch(error => console.error(\"Erro ao atualizar a loja:\", error));\n            }\n            onClose(); // Apenas fecha o modal, sem resetar os estados globais\n        };\n\n        if (!isOpen) return null;\n\n        return (\n            <div className=\"modal-overlay\">\n                <div className=\"modal-content\">\n                    <div className=\"close-button-container\">\n                        <button onClick={onClose} className=\"close-button\">&times;</button>\n                    </div>\n\n                    <div className=\"div-inputs\" style={{flexDirection: 'column'}}>\n                    <textarea\n                        placeholder=\"Título\"\n                        value={tempTitle}\n                        onChange={(e) => setTempTitle(e.target.value)}\n                        className=\"input-h1-store-modal\"\n                    />\n                        <textarea\n                            placeholder=\"Escreva a descrição do seu catálogo\"\n                            value={tempDescription}\n                            onChange={(e) => setTempDescription(e.target.value)}\n                            className=\"input-p\"\n                        />\n                    </div>\n\n                    <button onClick={updateStore} className=\"save-button\">Salvar</button>\n                </div>\n            </div>\n        );\n    }\n\n\n    const openEditTitleModal = () => {\n        // Atualiza estados temporários com os valores atuais antes de abrir o modal\n\n        setEditTitleModalOpen(true);\n    };\n\n    return (\n        <div className=\"manager\">\n            <div style={{backgroundColor: 'lightgrey', height: '30px'}}>\n                <div style={{marginLeft: '13px', fontSize: '13px'}}> MY</div>\n                <div style={{marginLeft: '10px', fontSize: '13px'}}> APP</div>\n\n            </div>\n            <header className=\"app-header\">\n                {/* Imagem do logo seria aqui */}\n\n                <div className=\"div-inputs\" style={{flexDirection: 'column'}}>\n                 <textarea\n                     placeholder={'Titulo'}\n                     value={name}\n                     onClick={openEditTitleModal}\n                     className=\"input-h1\"\n                 />\n                    <textarea\n                        placeholder={'Escreva a descrição do seu catálogo'}\n                        value={description}\n                        onClick={openEditTitleModal}\n                        className=\"input-p\"/>\n                </div>\n\n\n\n                <div className=\"container-imagem\" style={{flexDirection: 'column'}}>\n                    <img src=\"https://i.pinimg.com/originals/6a/97/3a/6a973acc6f9e9fb337ba5509bb77e58e.jpg\"\n                         alt=\"Descrição da Imagem\" className=\"ajuste-imagem\"/>\n                </div>\n            </header>\n            <div className=\"category-container\">\n                <AddCategoryButton text={'+'}/>\n                {groupItems.map((category, index) => (\n                    <CategoryButton key={index} {...category}/>\n                ))}\n            </div>\n            <div style={{marginBottom:'20px'}}></div>\n            <div className=\"product-container\">\n                <AddProductCard/>\n\n                {items.map(product => (\n                    <ProductCard key={product.id} {...product} />\n                ))}\n\n                <div  className=\"product-card-empty\">\n\n                </div>\n\n            </div>\n            <Modal isOpen={modalOpen} onClose={closeModal} product={selectedProduct} groupItems={groupItems} />\n            <ModalNewGroup isOpen={modalNewGroupOpen} onClose={closeModalNewGroup} />\n            <ModalEditGroup isOpen={modalEditGroupOpen} onClose={closeModalEditGroup} group={selectedGroup} />\n            <ModalAddProductCard isOpen={addProductModal} onClose={closeAddProductModal} groupItems={groupItems} />\n            <EditTitleModal\n                isOpen={editTitleModalOpen}\n                onClose={() => setEditTitleModalOpen(false)}\n                name={name}\n                description={description}\n                setName={setName}\n                setDescription={setDescription}\n                setEditTitleModalOpen={setEditTitleModalOpen}\n            />\n\n        </div>\n    );\n}\n\nexport default Manager;\n","import React from 'react';\nimport { Route, Switch } from 'wouter';\nimport Home from './Pages/Home/Home';\nimport Manager from './Pages/Manager/Manager';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path=\"/\" component={Home} />\n                <Route path=\"/manager\" component={Manager} />\n                {/* Add other routes as needed */}\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}